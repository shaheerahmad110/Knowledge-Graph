PandasHas,Syntax,Description:,Label,Type,parameters,cut_syntax
Pickling,"read_pickle(filepath_or_buffer[, ...])",Load pickled pandas object (or any object) from file.,read pickle,Function,"['filepath_or_buffer', '...']",read_pickle()
Pickling,"DataFrame.to_pickle(path[, compression, ...])",Pickle (serialize) object to file.,write pickle,Function,"['path', 'compression', '...']",DataFrame.to_pickle()
Flat file,"read_table(filepath_or_buffer[, sep, ...])",Read general delimited file into DataFrame.,read table,Function,"['filepath_or_buffer', 'sep', '...']",read_table()
Flat file,"read_csv(filepath_or_buffer[, sep, ...])",Read a comma-separated values (csv) file into DataFrame.,read csv,Function,"['filepath_or_buffer', 'sep', '...']",read_csv()
Flat file,"DataFrame.to_csv([path_or_buf, sep, na_rep, ...])",Write object to a comma-separated values (csv) file.,write csv,Function,"['path_or_buf', 'sep', 'na_rep', '...']",DataFrame.to_csv()
Flat file,"read_fwf(filepath_or_buffer[, colspecs, ...])",Read a table of fixed-width formatted lines into DataFrame.,read fixed width table,Function,"['filepath_or_buffer', 'colspecs', '...']",read_fwf()
Clipboard,read_clipboard([sep]),Read text from clipboard and pass to read_csv.,read clipboard,Function,['sep'],read_clipboard()
Clipboard,"DataFrame.to_clipboard([excel, sep])",Copy object to the system clipboard.,write clipboard,Function,"['excel', 'sep']",DataFrame.to_clipboard()
Excel,"read_excel(io[, sheet_name, header, names, ...])",Read an Excel file into a pandas DataFrame.,read excel,Function,"['io', 'sheet_name', 'header', 'names', '...']",read_excel()
Excel,"DataFrame.to_excel(excel_writer[, ...])",Write object to an Excel sheet.,write excel,Function,"['excel_writer', '...']",DataFrame.to_excel()
Excel,"ExcelFile.parse([sheet_name, header, names, ...])",Parse specified sheet(s) into a DataFrame.,parse sheets,Function,"['sheet_name', 'header', 'names', '...']",ExcelFile.parse()
Excel,"Styler.to_excel(excel_writer[, sheet_name, ...])",Write Styler to an Excel sheet.,write excel,Function,"['excel_writer', 'sheet_name', '...']",Styler.to_excel()
Excel,"ExcelWriter(path[, engine, date_format, ...])",Class for writing DataFrame objects into excel sheets.,write excel,Function,"['path', 'engine', 'date_format', '...']",ExcelWriter()
JSON,"read_json(path_or_buf[, orient, typ, dtype, ...])",Convert a JSON string to pandas object.,read json,Function,"['path_or_buf', 'orient', 'typ', 'dtype', '...']",read_json()
JSON,"json_normalize(data[, record_path, meta, ...])",Normalize semi-structured JSON data into a flat table.,normalize json,Function,"['data', 'record_path', 'meta', '...']",json_normalize()
JSON,"DataFrame.to_json([path_or_buf, orient, ...])",Convert the object to a JSON string.,write json,Function,"['path_or_buf', 'orient', '...']",DataFrame.to_json()
JSON,"build_table_schema(data[, index, ...])",Create a Table schema from data.,build table schema,Function,"['data', 'index', '...']",build_table_schema()
HTML,"read_html(io[, match, flavor, header, ...])",Read HTML tables into a list of DataFrame objects.,read html,Function,"['io', 'match', 'flavor', 'header', '...']",read_html()
HTML,"DataFrame.to_html([buf, columns, col_space, ...])",Render a DataFrame as an HTML table.,write html,Function,"['buf', 'columns', 'col_space', '...']",DataFrame.to_html()
HTML,"Styler.to_html([buf, table_uuid, ...])","Write Styler to a file, buffer or string in HTML-CSS format.",write html,Function,"['buf', 'table_uuid', '...']",Styler.to_html()
XML,"read_xml(path_or_buffer[, xpath, ...])",Read XML document into a DataFrame object.,read xml,Function,"['path_or_buffer', 'xpath', '...']",read_xml()
XML,"DataFrame.to_xml([path_or_buffer, index, ...])",Render a DataFrame to an XML document.,write xml,Function,"['path_or_buffer', 'index', '...']",DataFrame.to_xml()
Latex,"DataFrame.to_latex([buf, columns, ...])","Render object to a LaTeX tabular, longtable, or nested table.",write latex,Function,"['buf', 'columns', '...']",DataFrame.to_latex()
Latex,"Styler.to_latex([buf, column_format, ...])","Write Styler to a file, buffer or string in LaTeX format.",write latex,Function,"['buf', 'column_format', '...']",Styler.to_latex()
HDFStore: PyTables (HDF5),"read_hdf(path_or_buf[, key, mode, errors, ...])","Read from the store, close it if we opened it.",read hdf,Function,"['path_or_buf', 'key', 'mode', 'errors', '...']",read_hdf()
HDFStore: PyTables (HDF5),"HDFStore.put(key, value[, format, index, ...])",Store object in HDFStore.,write hdfs,Function,"['key', 'value', 'format', 'index', '...']",HDFStore.put()
HDFStore: PyTables (HDF5),"HDFStore.append(key, value[, format, axes, ...])",Append to Table in file.,append hdfs,Function,"['key', 'value', 'format', 'axes', '...']",HDFStore.append()
HDFStore: PyTables (HDF5),HDFStore.get(key),Retrieve pandas object stored in file.,retrieve hdfs,Function,['key'],HDFStore.get()
HDFStore: PyTables (HDF5),"HDFStore.select(key[, where, start, stop, ...])","Retrieve pandas object stored in file, optionally based on where criteria.",retrieve hdfs,Function,"['key', 'where', 'start', 'stop', '...']",HDFStore.select()
HDFStore: PyTables (HDF5),HDFStore.info(),Print detailed information on the store.,hdfs information,Function,[''],HDFStore.info()
HDFStore: PyTables (HDF5),HDFStore.keys([include]),Return a list of keys corresponding to objects stored in HDFStore.,hdfs keys,Function,['include'],HDFStore.keys()
HDFStore: PyTables (HDF5),HDFStore.groups(),Return a list of all the top-level nodes.,hdfs nodes,Function,[''],HDFStore.groups()
HDFStore: PyTables (HDF5),HDFStore.walk([where]),Walk the pytables group hierarchy for pandas objects.,,Function,['where'],HDFStore.walk()
HDFStore: PyTables (HDF5),Warning,"One can store a subclass of DataFrame or Series to HDF5, but the type of the subclass is lost upon storing.",,Attribute,,Warning
Feather,"read_feather(path[, columns, use_threads, ...])",Load a feather-format object from the file path.,read feather,Function,"['path', 'columns', 'use_threads', '...']",read_feather()
Feather,"DataFrame.to_feather(path, **kwargs)",Write a DataFrame to the binary Feather format.,write feather,Function,"['path', '**kwargs']",DataFrame.to_feather()
Parquet,"read_parquet(path[, engine, columns, ...])","Load a parquet object from the file path, returning a DataFrame.",read parquet,Function,"['path', 'engine', 'columns', '...']",read_parquet()
Parquet,"DataFrame.to_parquet([path, engine, ...])",Write a DataFrame to the binary parquet format.,write parquet,Function,"['path', 'engine', '...']",DataFrame.to_parquet()
ORC,"read_orc(path[, columns])","Load an ORC object from the file path, returning a DataFrame.",read orc,Function,"['path', 'columns']",read_orc()
ORC,"DataFrame.to_orc([path, engine, index, ...])",Write a DataFrame to the ORC format.,write orc,Function,"['path', 'engine', 'index', '...']",DataFrame.to_orc()
SAS,"read_sas(filepath_or_buffer[, format, ...])",Read SAS files stored as either XPORT or SAS7BDAT format files.,read sas,Function,"['filepath_or_buffer', 'format', '...']",read_sas()
SPSS,"read_spss(path[, usecols, convert_categoricals])","Load an SPSS file from the file path, returning a DataFrame.",read spss,Function,"['path', 'usecols', 'convert_categoricals']",read_spss()
SQL,"read_sql_table(table_name, con[, schema, ...])",Read SQL database table into a DataFrame.,read sql,Function,"['table_name', 'con', 'schema', '...']",read_sql_table()
SQL,"read_sql_query(sql, con[, index_col, ...])",Read SQL query into a DataFrame.,read sql query,Function,"['sql', 'con', 'index_col', '...']",read_sql_query()
SQL,"read_sql(sql, con[, index_col, ...])",Read SQL query or database table into a DataFrame.,read sql,Function,"['sql', 'con', 'index_col', '...']",read_sql()
SQL,"DataFrame.to_sql(name, con[, schema, ...])",Write records stored in a DataFrame to a SQL database.,write sql,Function,"['name', 'con', 'schema', '...']",DataFrame.to_sql()
Google BigQuery,"read_gbq(query[, project_id, index_col, ...])",Load data from Google BigQuery.,read google big query,Function,"['query', 'project_id', 'index_col', '...']",read_gbq()
STATA,"read_stata(filepath_or_buffer[, ...])",Read Stata file into DataFrame.,read stata,Function,"['filepath_or_buffer', '...']",read_stata()
STATA,"DataFrame.to_stata(path[, convert_dates, ...])",Export DataFrame object to Stata dta format.,write stata,Function,"['path', 'convert_dates', '...']",DataFrame.to_stata()
STATA,StataReader.data_label,Return data label of Stata file.,stata file label,Attribute,,StataReader.data_label
STATA,StataReader.value_labels(),Return a nested dict associating each variable name to its value and label.,,Function,[''],StataReader.value_labels()
STATA,StataReader.variable_labels(),Return a dict associating each variable name with corresponding label.,,Function,[''],StataReader.variable_labels()
STATA,StataWriter.write_file(),Export DataFrame object to Stata dta format.,write stata format,Function,[''],StataWriter.write_file()
